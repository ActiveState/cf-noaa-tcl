/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: envelope.proto */

#ifndef PROTOBUF_C_envelope_2eproto__INCLUDED
#define PROTOBUF_C_envelope_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "heartbeat.pb-c.h"
#include "http.pb-c.h"
#include "log.pb-c.h"
#include "metric.pb-c.h"
#include "error.pb-c.h"

typedef struct _Events__Envelope Events__Envelope;


/* --- enums --- */

/*
 * / Type of the wrapped event.
 */
typedef enum _Events__Envelope__EventType {
  EVENTS__ENVELOPE__EVENT_TYPE__Heartbeat = 1,
  EVENTS__ENVELOPE__EVENT_TYPE__HttpStart = 2,
  EVENTS__ENVELOPE__EVENT_TYPE__HttpStop = 3,
  EVENTS__ENVELOPE__EVENT_TYPE__HttpStartStop = 4,
  EVENTS__ENVELOPE__EVENT_TYPE__LogMessage = 5,
  EVENTS__ENVELOPE__EVENT_TYPE__ValueMetric = 6,
  EVENTS__ENVELOPE__EVENT_TYPE__CounterEvent = 7,
  EVENTS__ENVELOPE__EVENT_TYPE__Error = 8,
  EVENTS__ENVELOPE__EVENT_TYPE__ContainerMetric = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EVENTS__ENVELOPE__EVENT_TYPE)
} Events__Envelope__EventType;

/* --- messages --- */

/*
 * / Envelope wraps an Event and adds metadata.
 */
struct  _Events__Envelope
{
  ProtobufCMessage base;
  /*
   * / Unique description of the origin of this event.
   */
  char *origin;
  /*
   * / Type of wrapped event. Only the optional field corresponding to the value of eventType should be set.
   */
  Events__Envelope__EventType eventtype;
  /*
   * / UNIX timestamp (in nanoseconds) event was wrapped in this Envelope.
   */
  protobuf_c_boolean has_timestamp;
  int64_t timestamp;
  Events__Heartbeat *heartbeat;
  Events__HttpStart *httpstart;
  Events__HttpStop *httpstop;
  Events__HttpStartStop *httpstartstop;
  Events__LogMessage *logmessage;
  Events__ValueMetric *valuemetric;
  Events__CounterEvent *counterevent;
  Events__Error *error;
  Events__ContainerMetric *containermetric;
};
#define EVENTS__ENVELOPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&events__envelope__descriptor) \
    , NULL, 0, 0,0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/* Events__Envelope methods */
void   events__envelope__init
                     (Events__Envelope         *message);
size_t events__envelope__get_packed_size
                     (const Events__Envelope   *message);
size_t events__envelope__pack
                     (const Events__Envelope   *message,
                      uint8_t             *out);
size_t events__envelope__pack_to_buffer
                     (const Events__Envelope   *message,
                      ProtobufCBuffer     *buffer);
Events__Envelope *
       events__envelope__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   events__envelope__free_unpacked
                     (Events__Envelope *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Events__Envelope_Closure)
                 (const Events__Envelope *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor events__envelope__descriptor;
extern const ProtobufCEnumDescriptor    events__envelope__event_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_envelope_2eproto__INCLUDED */
